{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","role","tabIndex","onClick","toggleMode","htmlFor","TextForm","useState","text","settext","searchStr","setstr","style","color","heading","value","rows","onChange","event","target","backgroundColor","newText","toUpperCase","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","newtext","split","join","placeholder","search","showalert","length","Alert","alert","class","Type","word","charAt","slice","capitalize","msg","App","Mode","setMode","body","message","setTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c295893f.chunk.js","sourcesContent":["import React from \"react\";\r\n// import { Link } from 'react-router-dom'\r\n\r\nconst Navbar = (props) => {\r\n  return (\r\n\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n              <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                <li className=\"nav-item\">\r\n                  <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                  {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n                  </li>\r\n                <li className=\"nav-item\">\r\n                    <a className=\"nav-link\" href=\"#\"> About</a>\r\n                  </li>\r\n                <li className=\"nav-item dropdown\">\r\n                  <a className=\"nav-link dropdown-toggle\" href=\"/\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                  Dropdown\r\n                  </a>\r\n                  <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                    <li><a className=\"dropdown-item\" href=\"/\">Action</a></li>\r\n                    <li><a className=\"dropdown-item\" href=\"/\">Another action</a></li>\r\n                    <li><hr className=\"dropdown-divider\"/></li>\r\n                    <li><a className=\"dropdown-item\" href=\"/\">Something else here</a></li>\r\n                  </ul>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <a className=\"nav-link disabled\" href=\"/\"  tabIndex=\"-1\" aria-disabled=\"true\">Disabled</a>\r\n                </li>\r\n              </ul>\r\n              {/* <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn btn-outline-success\" type=\"submit\" onClick={props.search}>Search</button>\r\n              </form> */}\r\n              <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable {props.mode} Mode</label>\r\n              </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport { useState } from 'react';\r\n\r\nconst TextForm = (props) => {\r\n    const [text,settext]=useState(\"Enter Text here\")\r\n    const [searchStr,setstr]=useState(\"\")\r\n     function ConverttoUpper() {\r\n         let newText=text.toUpperCase();\r\n       settext(newText);\r\n     }\r\n     function ConverttoLower() {\r\n         let newText=text.toLowerCase();\r\n       settext(newText);\r\n     }\r\n\r\n     function searchString() {\r\n         let foundText=text.search(searchStr);\r\n         if (foundText===-1)\r\n         props.showalert(\" String Not Found\",'warning')\r\n         else\r\n         props.showalert(\" String Found\",'success')      \r\n     }\r\n\r\n     function handleCopy() {\r\n         let text=document.getElementById(\"myText\")\r\n         text.select()\r\n         navigator.clipboard.writeText(text.value)\r\n     }\r\n\r\n     function handleExtraSpaces() {\r\n         let newtext=text.split(/[ ]+/)\r\n         settext(newtext.join(\" \"))\r\n     }\r\n\r\n     function handleonChange(event) {\r\n         settext(event.target.value)\r\n     }\r\n    return (\r\n        <div className=\"container\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" value={text} id=\"myText\" rows=\"5\" onChange={handleonChange} style={{backgroundColor:props.mode==='dark'?'#2a2f47':'white',\r\n            color:props.mode==='dark'?'white':'black'}}></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-1\" onClick={ConverttoUpper}>Convert to Uppercase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={ConverttoLower}>Convert to Lowercase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleCopy}>Copy Text</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n            <input type=\"text\" className=\"mx-1\" placeholder=\"Search for a Word\" onChange={(event)=> setstr(event.target.value)}\r\n            style={{backgroundColor:props.mode==='dark'?'#2a2f47':'white',\r\n            color:props.mode==='dark'?'white':'black'}}/>\r\n            <button className=\"btn btn-primary mx-1\" onClick={searchString}>Search</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={()=> settext(\"\")}>Clear Text</button>\r\n            <div className=\"container my-3\">\r\n                <h2>Your Text Summary</h2>\r\n                <p> {text.split(' ').length} Words and {text.length} Characters</p>\r\n                <p> {0.008 * text.split(' ').length} Minutes to read</p>\r\n                <h2>Preview</h2>\r\n                <p>{text.length>0?text:'Enter Some Text in Textarea'}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TextForm;\r\n","import React from 'react';\r\n\r\nconst Alert = (props) => {\r\n    const capitalize=word => {\r\n        const text=word.toLowerCase()\r\n        return text.charAt(0).toUpperCase()+text.slice(1)+' ';\r\n    }\r\n    return (\r\n            props.alert && <div class={`alert alert-${props.alert.Type} alert-dismissible fade show`} role=\"alert\">                \r\n                <strong>{capitalize(props.alert.Type)}</strong>{props.alert.msg}\r\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default Alert;\r\n","import './App.css';\n// import About from './Components/About';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './Components/Alert'\n// import { BrowserRouter as Router,Route, Switch } from 'react-router-dom'\n\nfunction App() {\n  // const titles=[\"Home\",\"About\",\"Contact\"];\n  function searched() {\n    alert(\"fdj\")\n  }\n\n  const [alert, showalert] = useState(null);\n  function toggleMode() {\n    if (Mode === 'light')\n    {\n      setMode('dark')\n      document.body.style.backgroundColor='#2a2f47';\n      showalert({msg:\" Dark Mode has been Enabled!\",Type:\"success \"});\n      document.title=\"TextUtils - Dark Mode\"\n    }\n    else\n    {\n      setMode('light')    \n      document.body.style.backgroundColor='white';\n      showalert({msg:\" Light Mode has been Enabled!\",Type:\"success \"});\n      document.title=\"TextUtils - Light Mode\"\n    }\n  }\n  const [Mode, setMode] = useState('light');\n\n\n  const SetAlert=(message,type)=>{\n    showalert({\n      msg:message,\n      Type:type\n    })\n    setTimeout(()=> showalert(null),1000)\n  }\n  return (\n    <div >\n      {/* <Router> */}\n      <Navbar title=\"TextUtils\" search={searched} mode={Mode} toggleMode={toggleMode}></Navbar>\n      <Alert alert={alert}/>\n      <div className=\"container my-3\"> \n      {/* <Switch> */}\n      {/* <Route exact path=\"/about\" ><About/></Route> */}\n      {/* <Route path=\"/\"> */}\n        <TextForm showalert={SetAlert} heading=\"Enter Text to Analyz\" mode={Mode} toggleMode={toggleMode}/>\n      {/* </Route>         */}\n      {/*  */}\n      {/* </Switch>  */}\n      </div>\n      {/* </Router> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}